name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build_openeb
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install libcaer dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pkg-config libusb-1.0-0-dev libserialport-dev

      - name: Install libcaer dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake pkg-config libusb libserialport

      - name: Install libcaer dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          vcpkg install libusb:x64-windows
          vcpkg install libserialport:x64-windows

      - name: Build and install libcaer
        run: |
          git clone https://gitlab.com/inivation/dv/libcaer.git
          cd libcaer
          cmake -S . -B build -DENABLE_OPENCV=0 -DENABLE_SERIALDEV=1
          cmake --build build --config Release
          sudo cmake --install build
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT: "LIBCAER_INCLUDE_DIR=/usr/local/include LIBCAER_LIB_DIR=/usr/local/lib"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz 